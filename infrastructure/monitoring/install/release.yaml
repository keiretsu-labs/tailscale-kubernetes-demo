---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: monitoring
spec:
  interval: 2m
  driftDetection:
    mode: enabled
  chart:
    spec:
      chart: kube-prometheus-stack
      version: x
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    alertmanager:
      ingress:
        annotations: 
          cert-manager.io/cluster-issuer: global-issuer
          kubernetes.io/tls-acme: 'true'
        enabled: true
        hosts:
          - alertmanager${INGRESS_SUFFIX}
        tls:
          - hosts:
              - alertmanager${INGRESS_SUFFIX}
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: nfs-client
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi
    grafana:
      ingress:
        annotations: 
          cert-manager.io/cluster-issuer: global-issuer
          kubernetes.io/tls-acme: 'true'
        enabled: true
        hosts:
          - grafana${INGRESS_SUFFIX}
        tls:
          - hosts:
              - grafana${INGRESS_SUFFIX}
      persistence:
        enabled: true
        type: sts
        storageClassName: "nfs-client"
        accessModes:
          - ReadWriteOnce
        size: 20Gi
    prometheus:
      ingress:
        annotations: 
          cert-manager.io/cluster-issuer: global-issuer
          kubernetes.io/tls-acme: 'true'
        enabled: true
        hosts:
          - prometheus${INGRESS_SUFFIX}
        tls:
          - hosts:
              - prometheus${INGRESS_SUFFIX}
      prometheusSpec:
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: nfs-client
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi
    thanosRuler:
      thanosRulerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: nfs-client
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 50Gi