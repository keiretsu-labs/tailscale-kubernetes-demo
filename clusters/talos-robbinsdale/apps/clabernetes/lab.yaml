---
apiVersion: v1
kind: Namespace
metadata:
    name: c9s-kind01
    labels:
        pod-security.kubernetes.io/enforce: privileged
---
apiVersion: v1
kind: ConfigMap
metadata:
    name: kind01-k01-startup-config
    namespace: c9s-kind01
data:
  startup-config: |-
    apiVersion: kind.x-k8s.io/v1alpha4
    kind: Cluster
    nodes:
      - role: control-plane
      - role: worker
---
apiVersion: clabernetes.containerlab.dev/v1alpha1
kind: Topology
metadata:
  name: kind01
  namespace: c9s-kind01
spec:
  deployment:
    filesFromConfigMap:
        k01:
          - filePath: k01-config.yaml
            configMapName: kind01-k01-startup-config
            configMapPath: startup-config
            mode: read
  naming: non-prefixed
  definition:
    containerlab: |-
          name: kind01

          topology:
            kinds:
              nokia_srlinux:
                image: ghcr.io/nokia/srlinux:23.10.1
            nodes:
              srl01:
                kind: nokia_srlinux
              k01:
                kind: k8s-kind
                startup-config: k01-config.yaml
              k02:
                kind: k8s-kind

              # k01 cluster contains 2 nodes: a control-plane and a worker
              # the cluster config is defined in k01-config.yaml
              k01-control-plane:
                kind: ext-container
                exec:
                  - "ip addr add dev eth1 192.168.10.1/24"
              k01-worker:
                kind: ext-container
                exec:
                  - "ip addr add dev eth1 192.168.11.1/24"

              # k02 cluster has an all-in-one node
              k02-control-plane:
                kind: ext-container
                exec:
                  - "ip addr add dev eth1 192.168.20.1/24"

            links:
              - endpoints: ["srl01:e1-1", "k01-control-plane:eth1"]
              - endpoints: ["srl01:e1-2", "k01-worker:eth1"]

              - endpoints: ["srl01:e1-4", "k02-control-plane:eth1"]