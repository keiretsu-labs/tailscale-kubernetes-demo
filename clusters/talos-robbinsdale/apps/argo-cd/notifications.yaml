apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
data:
  subscriptions: |
    - recipients:
      - github
      triggers:
      - on-sync-status-unknown
      - on-sync-failed
      - on-health-degraded
  # GitHub service configuration
  service.github: |
    appID: $github-app-id
    installationID: $github-installation-id
    privateKey: $github-privateKey

  # Trigger definitions
  trigger.on-sync-status-unknown: |
    - when: app.status.sync.status == 'Unknown'
      send: [github-status]
  trigger.on-sync-failed: |
    - when: app.status.sync.status == 'OutOfSync'
      send: [github-status]
  trigger.on-health-degraded: |
    - when: app.status.health.status == 'Degraded'
      send: [github-status]

  # Template for GitHub status updates
  template.github-status: |
    message: |
      Application {{.app.metadata.name}} status update - {{.app.status.sync.status}}/{{.app.status.health.status}}
    github:
      repoURLPath: "{{.app.spec.source.repoURL}}"
      revisionPath: "{{.app.status.sync.revision}}"
      status:
        state: "{{if eq .app.status.sync.status 'Synced'}}success{{else}}failure{{end}}"
        label: "continuous-delivery/{{.app.metadata.name}}"
        targetURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"
      deployment:
        state: "{{if eq .app.status.sync.status 'Synced'}}success{{else}}failure{{end}}"
        environment: production
        environmentURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}"
        logURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"
        requiredContexts: []

---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: argocd-notifications-secret
  namespace: argocd 
spec:
  itemPath: "vaults/K8s/items/argocd-apps"
