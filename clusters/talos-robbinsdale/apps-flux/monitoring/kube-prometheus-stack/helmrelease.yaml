---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 61.1.0 # Use a recent stable version
      sourceRef:
        kind: HelmRepository
        name: prometheus-community # Use prometheus-community repo (OCI or web based on previous steps)
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    grafana:
      sidecar:
        dashboards:
          enabled: true
          label: grafana_dashboard
          folderAnnotation: grafana_folder
          provider:
            foldersFromFilesStructure: true
      persistence:
        enabled: false
      serviceMonitor:
        enabled: true
      additionalDataSources:
        - name: Loki
          type: loki
          uid: loki
          url: http://loki-gateway.monitoring.svc.cluster.local # Assuming Loki runs in the same ns
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: "default"
              orgId: 1
              folder: "default"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/default
      dashboards:
        logs:
          loki-logs-app:
            gnetId: 15141
            revision: 1
            datasource: loki
          loki-dashboard:
            gnetId: 10880
            revision: 1
            datasource: loki
          kubernetes-logs:
            gnetId: 16970
            revision: 1
            datasource: loki
        ceph:
          ceph-cluster:
            gnetId: 2842
            revision: 18
            datasource: prometheus
          ceph-osd:
            gnetId: 5336
            revision: 9
            datasource: prometheus
          ceph-pools:
            gnetId: 5342
            revision: 9
            datasource: prometheus
        volsync:
          volsync-overview:
            gnetId: 21356
            revision: 3
            datasource: prometheus
    prometheusOperator:
      admissionWebhooks:
        enabled: false
    prometheus:
      prometheusSpec:
        serviceMonitorSelector: {}
        externalUrl: https://prometheus.rajsingh.info
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        enableRemoteWriteReceiver: true
        enableFeatures:
          - exemplar-storage
        retention: 30d
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block-replicated-nvme # Use defined SC
              resources:
                requests:
                  storage: 100Gi
      server:
        additionalScrapeConfigs:
          - job_name: opencost
            honor_labels: true
            scrape_interval: 1m
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            static_configs:
              - targets: ['opencost.opencost.svc.cluster.local:9003'] # Use FQDN
        retention: 30d
    alertmanager:
      enabled: true
    kubeProxy:
      enabled: false
    kubeControllerManager:
      enabled: true
    kubeScheduler:
      enabled: true 