---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 61.1.0 # Use a recent stable version
      sourceRef:
        kind: HelmRepository
        name: prometheus-community # Use prometheus-community repo (OCI or web based on previous steps)
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  # valuesFrom:
  #   - kind: ConfigMap
  #     name: flux-kube-state-metrics-config
  #     valuesKey: kube-state-metrics-config.yaml
  values:
    grafana:
      enabled: true
      admin:
        existingSecret: "grafana-credentials"
        userKey: username
        passwordKey: password
      envRenderSecret:
        GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "f9d3edaaee625bd625a6c089f708c43694ae115d25e60003d10308e035219bca"
      grafana.ini:
        auth.generic_oauth:
          enabled: true
          name: TailscaleID
          allow_sign_up: true
          client_id: "463f905aa1e665a2b530614f9e43d401"
          scopes: openid email profile
          auth_url:  https://idp.keiretsu.ts.net/authorize/funnel
          token_url: https://idp.keiretsu.ts.net/token
          api_url:   https://idp.keiretsu.ts.net/userinfo
          redirect_uri: https://grafana.robbinsdale.rajsingh.info/login/generic_oauth
          login_attribute: preferred_username
        server:
          root_url: https://grafana.robbinsdale.rajsingh.info
          domain: grafana.robbinsdale.rajsingh.info
      fullnameOverride: grafana
      additionalDataSources:
        - name: Loki
          type: loki
          uid: loki
          url: http://loki.monitoring:3100
      adminPassword: admin
      testFramework:
        enabled: false
      persistence:
        enabled: false
      serviceMonitor:
        enabled: true
      route:
        main:
          enabled: true
          parentRefs:
            - name: ts
              kind: Gateway
              namespace: keiretsu
          hostnames:
            - "grafana.${LOCATION}.${RAJSINGH_INFO_DOMAIN}"
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: "default"
              orgId: 1
              folder: "default"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/default
            - name: "argocd"
              orgId: 1
              folder: "argocd"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/argocd
            - name: "ceph"
              orgId: 1
              folder: "ceph"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/ceph
            - name: "envoy-gateway"
              orgId: 1
              folder: "envoy-gateway"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/envoy-gateway
            - name: "kubernetes"
              orgId: 1
              folder: "kubernetes"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/kubernetes
            - name: "volsync"
              orgId: 1
              folder: "volsync"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/volsync
            - name: "logs"
              orgId: 1
              folder: "logs"
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/logs
      dashboardsConfigMaps:
        envoy-gateway: "grafana-dashboards"
      sidecar:
        dashboards:
          enabled: true
          label: grafana_dashboard
          folderAnnotation: grafana_folder
          provider:
            foldersFromFilesStructure: true
      dashboards:
        argocd:
          # https://grafana.com/grafana/dashboards/19993-argocd-operational-overview/
          argocd-operational-overview:
            gnetId: 19993
            revision: 2
            datasource: prometheus
          # https://grafana.com/grafana/dashboards/19975-argocd-notifications-overview/
          argocd-notifications-overview:
            gnetId: 19975
            revision: 2
            datasource: prometheus
          # https://grafana.com/grafana/dashboards/19974-argocd-application-overview/
          argocd-application-overview:
            gnetId: 19974
            revision: 2
            datasource: prometheus
        logs:
          # https://grafana.com/grafana/dashboards/15141-kubernetes-service-logs/
          loki-logs-app:
            gnetId: 15141
            revision: 1
            datasource: loki
          # https://grafana.com/grafana/dashboards/10880-loki-promtail/
          loki-dashboard:
            gnetId: 10880
            revision: 1
            datasource: loki
          # https://grafana.com/grafana/dashboards/16970-container-log-quick-search/
          kubernetes-logs:
            gnetId: 16970
            revision: 1
            datasource: loki
        ceph:
          ceph-cluster:
            gnetId: 2842
            revision: 18
            datasource: prometheus
          ceph-osd:
            gnetId: 5336
            revision: 9
            datasource: prometheus
          ceph-pools:
            gnetId: 5342
            revision: 9
            datasource: prometheus
        volsync:
          volsync-overview:
            gnetId: 21356
            revision: 3
            datasource: prometheus   
    prometheusOperator:
      fullnameOverride: prometheus
      admissionWebhooks:
        enabled: false
    prometheus:
      rbac:
          extraRules:
            - apiGroups:
                - "gateway.networking.k8s.io"
              resources:
                - gateways
                - gatewayclasses
                - httproutes
                - grpcroutes
                - tcproutes
                - tlsroutes
                - udproutes
                - backendtlspolicies
              verbs:
                - list
                - watch
      prometheusSpec:
        serviceMonitorSelector: {}
        externalUrl: https://prometheus.rajsingh.info
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        enableRemoteWriteReceiver: true
        enableFeatures:
          - exemplar-storage
        retention: 30d
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 100Gi
      server:
        additionalScrapeConfigs:
          - job_name: opencost
            honor_labels: true
            scrape_interval: 1m
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            dns_sd_configs:
              - names:
                  - opencost.opencost
                type: "A"
                port: 9003
        retention: 30d

    alertmanager:
      enabled: true
      fullnameOverride: alertmanager

    kubeProxy:
      enabled: false

    kubeControllerManager:
      enabled: true

    kubeScheduler:
      enabled: true

    kubeEtcd:
      enabled: true

    prometheus-node-exporter:
      fullnameOverride: node-exporter

    kube-state-metrics:
      enabled: true
      fullnameOverride: kube-state-metrics
      customResourceState:
        enabled: true
        # Add (Cluster)Role permissions to list/watch the customResources defined in the config to rbac.extraRules
        config:
          kind: CustomResourceStateMetrics
          spec:
            resources:
              - groupVersionKind:
                  group: gateway.networking.k8s.io
                  kind: "Gateway"
                  version: "v1"
                metricNamePrefix: gatewayapi_gateway
                labelsFromPath:
                  name:
                    - metadata
                    - name
                  namespace:
                    - metadata
                    - namespace
                metrics:
                  - name: "info"
                    help: "Gateway information"
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          gatewayclass_name: [ spec, gatewayClassName ]
                  - name: "labels"
                    help: "Kubernetes labels converted to Prometheus labels."
                    each:
                      type: Info
                      info:
                        path: [ metadata ]
                        labelsFromPath:
                          "*": [ labels ]
                  - name: "created"
                    help: "created timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, creationTimestamp ]
                  - name: "deleted"
                    help: "deletion timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, deletionTimestamp ]
                  - name: "listener_info"
                    help: "Gateway listener information"
                    each:
                      type: Info
                      info:
                        path: [ spec, listeners ]
                        labelsFromPath:
                          listener_name: [ "name" ]
                          port: [ "port" ]
                          protocol: [ "protocol" ]
                          hostname: [ "hostname" ]
                          tls_mode: [ "tls","mode" ]
                          allowed_routes_namespaces_from: [ "allowedRoutes", "namespaces", "from" ]
                  - name: "status"
                    help: "status condition"
                    each:
                      type: Gauge
                      gauge:
                        path: [ status, conditions ]
                        labelsFromPath:
                          type: [ "type" ]
                        valueFrom: [ "status" ]
                  - name: "status_listener_attached_routes"
                    help: "Number of attached routes for a listener"
                    each:
                      type: Gauge
                      gauge:
                        path: [ status, listeners ]
                        labelsFromPath:
                          listener_name: [ "name" ]
                        valueFrom: [ "attachedRoutes" ]
                  - name: "status_address_info"
                    help: "Gateway address types and values"
                    each:
                      type: Info
                      info:
                        path: [ status, addresses ]
                        labelsFromPath:
                          type: [ "type" ]
                          value: [ "value" ]
              - groupVersionKind:
                  group: gateway.networking.k8s.io
                  kind: "GatewayClass"
                  version: "v1"
                metricNamePrefix: gatewayapi_gatewayclass
                labelsFromPath:
                  name:
                    - metadata
                    - name
                metrics:
                  - name: "info"
                    help: "GatewayClass information"
                    each:
                      type: Info
                      info:
                        labelsFromPath:
                          controller_name: [ spec, controllerName ]
                  - name: "labels"
                    help: "Kubernetes labels converted to Prometheus labels."
                    each:
                      type: Info
                      info:
                        path: [ metadata ]
                        labelsFromPath:
                          "*": [ labels ]
                  - name: "created"
                    help: "created timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, creationTimestamp ]
                  - name: "deleted"
                    help: "deletion timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, deletionTimestamp ]
                  - name: "status"
                    help: "status condition"
                    each:
                      type: Gauge
                      gauge:
                        path: [ status, conditions ]
                        labelsFromPath:
                          type: [ "type" ]
                        valueFrom: [ "status" ]
                  - name: "status_supported_features"
                    help: "List of supported features for the GatewayClass"
                    each:
                      type: Info
                      info:
                        path: [ status, supportedFeatures ]
                        labelsFromPath:
                          features: [ ]
              - groupVersionKind:
                  group: gateway.networking.k8s.io
                  kind: "HTTPRoute"
                  version: "v1"
                metricNamePrefix: gatewayapi_httproute
                labelsFromPath:
                  name:
                    - metadata
                    - name
                  namespace:
                    - metadata
                    - namespace
                metrics:
                  - name: "labels"
                    help: "Kubernetes labels converted to Prometheus labels."
                    each:
                      type: Info
                      info:
                        path: [ metadata ]
                        labelsFromPath:
                          "*": [ labels ]
                  - name: "created"
                    help: "created timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, creationTimestamp ]
                  - name: "deleted"
                    help: "deletion timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, deletionTimestamp ]
                  - name: "hostname_info"
                    help: "Hostname information"
                    each:
                      type: Info
                      info:
                        path: [ spec, hostnames ]
                        labelsFromPath:
                          hostname: [ ]
                  - name: "parent_info"
                    help: "Parent references that the httproute wants to be attached to"
                    each:
                      type: Info
                      info:
                        path: [ spec, parentRefs ]
                        labelsFromPath:
                          parent_group: [ "group" ]
                          parent_kind: [ "kind" ]
                          parent_name: [ "name" ]
                          parent_namespace: [ "namespace" ]
                          parent_section_name: [ "sectionName" ]
                          parent_port: [ "port" ]
                  - name: "status_parent_info"
                    help: "Parent references that the httproute is attached to"
                    each:
                      type: Info
                      info:
                        path: [ status, parents ]
                        labelsFromPath:
                          controller_name: [ "controllerName" ]
                          parent_group: [ "parentRef", "group" ]
                          parent_kind: [ "parentRef", "kind" ]
                          parent_name: [ "parentRef", "name" ]
                          parent_namespace: [ "parentRef", "namespace" ]
                          parent_section_name: [ "parentRef", "sectionName" ]
                          parent_port: [ "parentRef", "port" ]
              - groupVersionKind:
                  group: gateway.networking.k8s.io
                  kind: "GRPCRoute"
                  version: "v1"
                metricNamePrefix: gatewayapi_grpcroute
                labelsFromPath:
                  name:
                    - metadata
                    - name
                  namespace:
                    - metadata
                    - namespace
                metrics:
                  - name: "labels"
                    help: "Kubernetes labels converted to Prometheus labels."
                    each:
                      type: Info
                      info:
                        path: [ metadata ]
                        labelsFromPath:
                          "*": [ labels ]
                  - name: "created"
                    help: "created timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, creationTimestamp ]
                  - name: "deleted"
                    help: "deletion timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, deletionTimestamp ]
                  - name: "hostname_info"
                    help: "Hostname information"
                    each:
                      type: Info
                      info:
                        path: [ spec, hostnames ]
                        labelsFromPath:
                          hostname: [ ]
                  - name: "parent_info"
                    help: "Parent references that the grpcroute wants to be attached to"
                    each:
                      type: Info
                      info:
                        path: [ spec, parentRefs ]
                        labelsFromPath:
                          parent_group: [ "group" ]
                          parent_kind: [ "kind" ]
                          parent_name: [ "name" ]
                          parent_namespace: [ "namespace" ]
                          parent_section_name: [ "sectionName" ]
                          parent_port: [ "port" ]
                  - name: "status_parent_info"
                    help: "Parent references that the grpcroute is attached to"
                    each:
                      type: Info
                      info:
                        path: [ status, parents ]
                        labelsFromPath:
                          controller_name: [ "controllerName" ]
                          parent_group: [ "parentRef", "group" ]
                          parent_kind: [ "parentRef", "kind" ]
                          parent_name: [ "parentRef", "name" ]
                          parent_namespace: [ "parentRef", "namespace" ]
                          parent_section_name: [ "parentRef", "sectionName" ]
                          parent_port: [ "parentRef", "port" ]
              - groupVersionKind:
                  group: gateway.networking.k8s.io
                  kind: "TCPRoute"
                  version: "v1alpha2"
                metricNamePrefix: gatewayapi_tcproute
                labelsFromPath:
                  name:
                    - metadata
                    - name
                  namespace:
                    - metadata
                    - namespace
                metrics:
                  - name: "labels"
                    help: "Kubernetes labels converted to Prometheus labels."
                    each:
                      type: Info
                      info:
                        path: [ metadata ]
                        labelsFromPath:
                          "*": [ labels ]
                  - name: "created"
                    help: "created timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, creationTimestamp ]
                  - name: "deleted"
                    help: "deletion timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, deletionTimestamp ]
                  - name: "parent_info"
                    help: "Parent references that the tcproute wants to be attached to"
                    each:
                      type: Info
                      info:
                        path: [ spec, parentRefs ]
                        labelsFromPath:
                          parent_group: [ "group" ]
                          parent_kind: [ "kind" ]
                          parent_name: [ "name" ]
                          parent_namespace: [ "namespace" ]
                          parent_section_name: [ "sectionName" ]
                          parent_port: [ "port" ]
                  - name: "status_parent_info"
                    help: "Parent references that the tcproute is attached to"
                    each:
                      type: Info
                      info:
                        path: [ status, parents ]
                        labelsFromPath:
                          controller_name: [ "controllerName" ]
                          parent_group: [ "parentRef", "group" ]
                          parent_kind: [ "parentRef", "kind" ]
                          parent_name: [ "parentRef", "name" ]
                          parent_namespace: [ "parentRef", "namespace" ]
                          parent_section_name: [ "parentRef", "sectionName" ]
                          parent_port: [ "parentRef", "port" ]
              - groupVersionKind:
                  group: gateway.networking.k8s.io
                  kind: "TLSRoute"
                  version: "v1alpha2"
                metricNamePrefix: gatewayapi_tlsroute
                labelsFromPath:
                  name:
                    - metadata
                    - name
                  namespace:
                    - metadata
                    - namespace
                metrics:
                  - name: "labels"
                    help: "Kubernetes labels converted to Prometheus labels."
                    each:
                      type: Info
                      info:
                        path: [ metadata ]
                        labelsFromPath:
                          "*": [ labels ]
                  - name: "created"
                    help: "created timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, creationTimestamp ]
                  - name: "deleted"
                    help: "deletion timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, deletionTimestamp ]
                  - name: "hostname_info"
                    help: "Hostname information"
                    each:
                      type: Info
                      info:
                        path: [ spec, hostnames ]
                        labelsFromPath:
                          hostname: [ ]
                  - name: "parent_info"
                    help: "Parent references that the tlsroute wants to be attached to"
                    each:
                      type: Info
                      info:
                        path: [ spec, parentRefs ]
                        labelsFromPath:
                          parent_group: [ "group" ]
                          parent_kind: [ "kind" ]
                          parent_name: [ "name" ]
                          parent_namespace: [ "namespace" ]
                          parent_section_name: [ "sectionName" ]
                          parent_port: [ "port" ]
                  - name: "status_parent_info"
                    help: "Parent references that the tlsroute is attached to"
                    each:
                      type: Info
                      info:
                        path: [ status, parents ]
                        labelsFromPath:
                          controller_name: [ "controllerName" ]
                          parent_group: [ "parentRef", "group" ]
                          parent_kind: [ "parentRef", "kind" ]
                          parent_name: [ "parentRef", "name" ]
                          parent_namespace: [ "parentRef", "namespace" ]
                          parent_section_name: [ "parentRef", "sectionName" ]
                          parent_port: [ "parentRef", "port" ]
              - groupVersionKind:
                  group: gateway.networking.k8s.io
                  kind: "UDPRoute"
                  version: "v1alpha2"
                metricNamePrefix: gatewayapi_udproute
                labelsFromPath:
                  name:
                    - metadata
                    - name
                  namespace:
                    - metadata
                    - namespace
                metrics:
                  - name: "labels"
                    help: "Kubernetes labels converted to Prometheus labels."
                    each:
                      type: Info
                      info:
                        path: [ metadata ]
                        labelsFromPath:
                          "*": [ labels ]
                  - name: "created"
                    help: "created timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, creationTimestamp ]
                  - name: "deleted"
                    help: "deletion timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, deletionTimestamp ]
                  - name: "parent_info"
                    help: "Parent references that the udproute wants to be attached to"
                    each:
                      type: Info
                      info:
                        path: [ spec, parentRefs ]
                        labelsFromPath:
                          parent_group: [ "group" ]
                          parent_kind: [ "kind" ]
                          parent_name: [ "name" ]
                          parent_namespace: [ "namespace" ]
                          parent_section_name: [ "sectionName" ]
                          parent_port: [ "port" ]
                  - name: "status_parent_info"
                    help: "Parent references that the udproute is attached to"
                    each:
                      type: Info
                      info:
                        path: [ status, parents ]
                        labelsFromPath:
                          controller_name: [ "controllerName" ]
                          parent_group: [ "parentRef", "group" ]
                          parent_kind: [ "parentRef", "kind" ]
                          parent_name: [ "parentRef", "name" ]
                          parent_namespace: [ "parentRef", "namespace" ]
                          parent_section_name: [ "parentRef", "sectionName" ]
                          parent_port: [ "parentRef", "port" ]
              - groupVersionKind:
                  group: gateway.networking.k8s.io
                  kind: "BackendTLSPolicy"
                  version: "v1alpha3"
                metricNamePrefix: gatewayapi_backendtlspolicy
                labelsFromPath:
                  name:
                    - metadata
                    - name
                  namespace:
                    - metadata
                    - namespace
                metrics:
                  - name: "labels"
                    help: "Kubernetes labels converted to Prometheus labels."
                    each:
                      type: Info
                      info:
                        path: [ metadata ]
                        labelsFromPath:
                          "*": [ labels ]
                  - name: "created"
                    help: "created timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, creationTimestamp ]
                  - name: "deleted"
                    help: "deletion timestamp"
                    each:
                      type: Gauge
                      gauge:
                        path: [ metadata, deletionTimestamp ]
                  - name: "target_info"
                    help: "Target references that the backendtlspolicy wants to be attached to"
                    each:
                      type: Info
                      info:
                        path: [ spec, targetRef ]
                        labelsFromPath:
                          target_group: [ "group" ]
                          target_kind: [ "kind" ]
                          target_name: [ "name" ]
                          target_namespace: [ "namespace" ]
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: prometheus
spec:
  parentRefs:
    - group: gateway.networking.k8s.io
      kind: Gateway
      name: ts
      namespace: keiretsu
  hostnames:
    - "prometheus.${LOCATION}.${RAJSINGH_INFO_DOMAIN}"
  rules:
    - backendRefs:
        - group: ""
          kind: Service
          name: kube-prometheus-stack-prometheus
          port: 9090
          weight: 1
      matches:
        - path:
            type: PathPrefix
            value: /
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: grafana
spec:
  parentRefs:
    - group: gateway.networking.k8s.io
      kind: Gateway
      name: ts
      namespace: keiretsu
  hostnames:
    - "grafana.${LOCATION}.${RAJSINGH_INFO_DOMAIN}"
  rules:
    - backendRefs:
        - group: ""
          kind: Service
          name: grafana
          port: 80
          weight: 1
      matches:
        - path:
            type: PathPrefix
            value: /