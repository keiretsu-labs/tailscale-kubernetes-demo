# Copyright (c) Tailscale Inc & AUTHORS
# SPDX-License-Identifier: BSD-3-Clause
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tailscale
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create"]
  - apiGroups: [""]
    resourceNames: ["tailscale-auth"]
    resources: ["secrets"]
    verbs: ["get", "update", "patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tailscale
subjects:
  - kind: ServiceAccount
    name: "tailscale"
roleRef:
  kind: Role
  name: tailscale
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tailscale
---
apiVersion: v1
kind: Pod
metadata:
  name: nginx
spec:
  serviceAccountName: "tailscale"
  containers:
    - name: nginx
      image: nginx
    - name: ts-sidecar
      imagePullPolicy: IfNotPresent
      image: "ghcr.io/tailscale/tailscale:latest"
      volumeMounts:
        - name: authkey
          mountPath: "/var/run/tailscale"
          readOnly: true
      env:
        - name: TS_KUBE_SECRET
          value: ""
        - name: TS_USERSPACE
          value: "false"
        - name: TS_DEBUG_FIREWALL_MODE
          value: auto
        - name: TS_EXTRA_ARGS
          value: --auth-key=file:/var/run/tailscale/authkey
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
      securityContext:
        privileged: true
  volumes:
    - name: authkey
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: tailscale
