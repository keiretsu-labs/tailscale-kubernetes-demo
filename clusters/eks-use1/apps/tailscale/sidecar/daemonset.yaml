apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: derper
  namespace: tailscale
  labels:
    app: derper
spec:
  selector:
    matchLabels:
      app: derper
  template:
    metadata:
      labels:
        app: derper
    spec:
      serviceAccount: tailscale
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      dnsConfig:
        nameservers:
        - "1.1.1.1"
        - "1.0.0.1"
      initContainers:
      - args:
        - sysctl -w net.ipv4.ip_forward=1 && if sysctl net.ipv6.conf.all.forwarding; then
          sysctl -w net.ipv6.conf.all.forwarding=1; fi
        command:
        - /bin/sh
        - -c
        image: tailscale/tailscale:v1.86.2
        imagePullPolicy: Always
        name: sysctler
        resources: {}
        securityContext:
          privileged: true
      - name: derper-config-init
        image: busybox
        command:
        - /bin/sh
        - -c
        - |
          mkdir -p /config/$(TS_DERP_HOSTNAME)
          cp /secrets/tls.crt /config/$(TS_DERP_HOSTNAME)/$(TS_DERP_HOSTNAME).crt
          cp /secrets/tls.key /config/$(TS_DERP_HOSTNAME)/$(TS_DERP_HOSTNAME).key
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: TS_DERP_HOSTNAME
          value: "$(NODE_NAME).derp.rajsingh.info"
        volumeMounts:
        - name: derper-tls
          mountPath: /secrets
          readOnly: true
        - name: derper-config
          mountPath: /config
      containers:
      - name: derper
        image: ghcr.io/rajsinghtech/tailscale/derper:1
        imagePullPolicy: Always
        command:
        - /bin/sh
        - -c
        - |
          exec /usr/local/bin/derper --hostname $(TS_DERP_HOSTNAME) --bootstrap-dns-names $(TS_DERP_HOSTNAME) -certmode $(TS_DERP_CERTMODE) -certdir /root/derper/$(TS_DERP_HOSTNAME) --stun --verify-clients=$(TS_DERP_VERIFY_CLIENTS) --http-port=$(TS_DERP_HTTP_PORT) -a :$(TS_DERP_LISTEN_PORT) --stun-port=$(TS_DERP_STUN_PORT)
        env:
        - name: TS_SOCKET
          value: /var/run/tailscale/tailscaled.sock
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: TS_DERP_HOSTNAME
          value: "$(NODE_NAME).derp.rajsingh.info"
        - name: TS_DERP_HTTP_PORT
          value: "80"
        - name: TS_DERP_LISTEN_PORT
          value: "443"
        - name: TS_DERP_STUN_PORT
          value: "3478"
        - name: TS_DERP_CERTMODE
          value: "manual"
        - name: TS_DERP_VERIFY_CLIENTS
          value: "false"
        securityContext:
          privileged: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
        volumeMounts:
        - name: derper-tls
          mountPath: /secrets
          readOnly: true
        - name: tailscale-socket
          mountPath: /var/run/tailscale
        - name: derper-config
          mountPath: /root/derper
        - name: debug-key
          mountPath: /etc/debug-key
          readOnly: true
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 3478
          name: stun
          protocol: UDP
      - name: tailscale
        image: tailscale/tailscale:unstable
        imagePullPolicy: Always
        command:
        - /bin/sh
        - -c
        - |
          export TS_KUBE_SECRET="tailscale-${NODE_NAME}"
          export TS_HOSTNAME="derper-${NODE_NAME}"
          exec /usr/local/bin/containerboot
        env:
        - name: TS_USERSPACE
          value: "false"
        - name: TS_ACCEPT_DNS
          value: "true"
        - name: TS_SOCKET
          value: /var/run/tailscale/tailscaled.sock
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: derp-secret
              key: TS_AUTHKEY
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: TS_ENABLE_METRICS
          value: "true"
        - name: TS_STATE_DIR
          value: ""
        - name: TS_ROUTES
          value: ""
        - name: TS_EXTRA_ARGS
          value: "--advertise-tags=tag:k8s"
        securityContext:
          privileged: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
        volumeMounts:
        - name: tailscale-socket
          mountPath: /var/run/tailscale
      - name: cloudflare-ddns
        image: favonia/cloudflare-ddns:latest
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CLOUDFLARE_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: derp-secret
              key: CLOUDFLARE_API_TOKEN
        - name: DOMAINS
          value: "$(NODE_NAME).derp.rajsingh.info"
        - name: PROXIED
          value: "false"
      volumes:
      - name: derper-tls
        secret:
          secretName: derper-tls
      - name: derper-config
        emptyDir: {}
      - name: debug-key
        secret:
          secretName: derp-secret
      - name: tailscale-socket
        emptyDir: {}
---
# Copyright (c) Tailscale Inc & AUTHORS
# SPDX-License-Identifier: BSD-3-Clause
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tailscale
  namespace: tailscale
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["secrets"]
  # Create can not be restricted to a resource name.
  verbs: ["create"]
- apiGroups: [""] # "" indicates the core API group
  resources: ["secrets"]
  verbs: ["get", "update", "patch"]
- apiGroups: [""] # "" indicates the core API group
  resources: ["events"]
  verbs: ["get", "create", "patch"]
---
# Copyright (c) Tailscale Inc & AUTHORS
# SPDX-License-Identifier: BSD-3-Clause
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tailscale
  namespace: tailscale
subjects:
- kind: ServiceAccount
  name: "tailscale"
  namespace: tailscale
roleRef:
  kind: Role
  name: tailscale
  apiGroup: rbac.authorization.k8s.io
---
# Copyright (c) Tailscale Inc & AUTHORS
# SPDX-License-Identifier: BSD-3-Clause
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tailscale
  namespace: tailscale