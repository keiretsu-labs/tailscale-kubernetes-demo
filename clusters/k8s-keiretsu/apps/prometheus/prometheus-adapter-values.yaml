rules:
  resource:
    cpu:
      containerQuery: |
        sum by (<<.GroupBy>>) (
          irate (
              container_cpu_usage_seconds_total{<<.LabelMatchers>>,container!="",pod!=""}[120s]
          )
        )
      nodeQuery: |
        sum by (<<.GroupBy>>) (
          1 - irate(
            node_cpu_seconds_total{mode="idle"}[60s]
          )
          * on(namespace, pod) group_left(node) (
            node_namespace_pod:kube_pod_info:{<<.LabelMatchers>>}
          )
        )
      resources:
        overrides:
          node:
            resource: node
          namespace:
            resource: namespace
          pod:
            resource: pod
      containerLabel: container
    memory:
      containerQuery: |
        sum by (<<.GroupBy>>) (
          container_memory_working_set_bytes{<<.LabelMatchers>>,container!="",pod!=""}
        )
      nodeQuery: |
        sum by (<<.GroupBy>>) (
          (
            node_memory_MemTotal_bytes{job="node-exporter"}
            -
            node_memory_MemAvailable_bytes{job="node-exporter"}
          )
          * on(namespace, pod) group_left(node) (
            node_namespace_pod:kube_pod_info:{<<.LabelMatchers>>}
          )
        )
      resources:
        overrides:
          node:
            resource: node
          namespace:
            resource: namespace
          pod:
            resource: pod
      containerLabel: container
    window: 5m

prometheus:
  url: http://prometheus-kube-prometheus-prometheus.{{ .Release.Namespace }}.svc.cluster.local
  port: 9090

resources:
  requests:
    cpu: 300m
    memory: 1Gi
  limits:
    memory: 2Gi
