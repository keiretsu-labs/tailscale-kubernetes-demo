kubeProxyReplacement: true
operator:
  rollOutPods: true
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
prometheus:
  enabled: true
  serviceMonitor:
    enabled: true
k8sServiceHost: 127.0.0.1
k8sServicePort: 6443
extraConfig:
  # Enable flow export
  export-file-path: "/var/run/cilium/hubble/hubble.log"
  export-aggregation: identity
  export-aggregation-state-filter: new error
hubble:
  relay:
    enabled: true
  metrics:
    dashboards:
      enabled: true
      namespace: monitoring
      annotations:
        grafana_folder: "Hubble"
    enableOpenMetrics: true
    enabled:
      - "dns:query;ignoreAAAA;labelsContext=source_namespace,source_workload,destination_namespace,destination_workload;sourceContext=workload-name|pod-name|dns|reserved-identity;destinationContext=workload-name|pod-name|dns|reserved-identity"
      - "drop:labelsContext=source_namespace,source_workload,destination_namespace,destination_workload;sourceContext=workload-name|pod-name|dns|reserved-identity;destinationContext=workload-name|pod-name|dns|reserved-identity"
      - "flow:labelsContext=source_namespace,source_workload,destination_namespace,destination_workload;sourceContext=workload-name|pod-name|dns|reserved-identity;destinationContext=workload-name|pod-name|dns|reserved-identity"
      - "flows-to-world:labelsContext=source_namespace,source_workload;sourceContext=workload-name|pod-name|dns|reserved-identity"
      - "httpV2:exemplars=true;labelsContext=source_namespace,source_workload,source_app,destination_namespace,destination_workload,destination_app,traffic_direction;sourceContext=workload-name|pod-name|dns|reserved-identity;destinationContext=workload-name|pod-name|dns|reserved-identity"
      - "icmp:labelsContext=source_namespace,source_workload,destination_namespace,destination_workload;sourceContext=workload-name|pod-name|dns|reserved-identity;destinationContext=workload-name|pod-name|dns|reserved-identity"
      - "kafka:labelsContext=source_namespace,source_workload,source_app,destination_namespace,destination_workload,destination_app,traffic_direction;sourceContext=workload-name|pod-name|dns|reserved-identity;destinationContext=workload-name|pod-name|dns|reserved-identity"
      - "policy:labelsContext=source_namespace,source_workload,destination_namespace,destination_workload;sourceContext=workload-name|pod-name|dns|reserved-identity;destinationContext=workload-name|pod-name|dns|reserved-identity"
      - "tcp:labelsContext=source_namespace,source_workload,destination_namespace,destination_workload;sourceContext=workload-name|pod-name|dns|reserved-identity;destinationContext=workload-name|pod-name|dns|reserved-identity"
      # enterprise only metrics
      - "flow_export:labelsContext=source_namespace,source_workload,destination_namespace,destination_workload"
    serviceMonitor:
      enabled: true
ipv4NativeRoutingCIDR: "10.0.0.0/8"
ipam: # native routing
  mode: "cluster-pool"
  operator:
    clusterPoolIPv4PodCIDRList: ["10.0.0.0/8"]
routingMode: native # tailscale
socketLB: 
  hostNamespaceOnly: true # tailscale

# tunnelProtocol: vxlan
devices: 'vmbr0,eth0'
# autoDirectNodeRoutes: true
# directRoutingSkipUnreachable: true
envoy:
  enabled: true
rollOutCiliumPods: true
localRedirectPolicy: true
bgpControlPlane: # BGP
  enabled: true
bpf.masquerade: true
bpf:
  masquerade: true # native routing
  lbExternalClusterIP: true # BGP Pod cidr https://docs.cilium.io/en/stable/network/kubernetes/kubeproxy-free/#external-access-to-clusterip-services